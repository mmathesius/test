---
name: beakerlib
desc: "Run beakerlib tests."
maintainer: merlinm

input:
    args:
        - koji_build
        - arch

environment:
    rpm:
        - make
        - beakerlib
        # libacl-devel needed by "selftest" script - which _should_ install it itself
        - libacl-devel

actions:
    - name: download the build
      koji:
          action: download
          koji_build: ${koji_build}
          arch: $arch
          # the "selftest" test requires the source RPM
          src: True
          target_dir: ${workdir}/rpms

    - name: set repo_dir to directory to use for local RPM repo
      shell:
          - echo -n ${workdir}/local_repo
      export: repo_dir

    - name: create repo directory
      shell:
          - mkdir -p ${repo_dir}

    - name: install the source RPM and move it to repo directory
      shell:
          # the "selftest" script _should_ install the SRPM itself
          - rpm -ivh ${workdir}/rpms/*.src.rpm
          - mv ${workdir}/rpms/*.src.rpm ${repo_dir}/

    - name: install the build RPMs and move them to repo directory
      shell:
          - dnf install -y ${workdir}/rpms/*.rpm
          - mv ${workdir}/rpms/*.rpm ${repo_dir}/

    - name: create repo from repo directory
      createrepo:
          repodir: ${repo_dir}

    - name: enable the created repo
      shell:
          - dnf config-manager --add-repo ${repo_dir}/

    - name: install and start restraint
      shell:
          - dnf copr -y enable bpeck/restraint
          - dnf install -y restraint restraint-client restraint-rhts
          - systemctl start restraintd.service

    - name: set up legacy beakerlib symlink
      shell:
          - mkdir -p /usr/lib/beakerlib
          - ignorereturn:
              - ln -s /usr/share/beakerlib/beakerlib.sh /usr/lib/beakerlib/beakerlib.sh

    - name: configure ssh to allow password-less local root login so restraint can run
      shell:
          - test -f /root/.ssh/id_rsa || ssh-keygen -t rsa -N "" -f /root/.ssh/id_rsa
          - cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
          - chmod 644 /root/.ssh/authorized_keys

    - name: use retraint to run the tests
      shell:
          - mkdir ${artifactsdir}/rstrnt-run
          - cp job.xml ${artifactsdir}/rstrnt-run/
          - ignorereturn:
              - cd ${artifactsdir}/rstrnt-run ; restraint --host localhost --job job.xml
      export: test_output

    - name: clean up the repo config created earlier
      shell:
          - rm $$( grep -l -e "${repo_dir}" /etc/yum.repos.d/* )
